service: passei-direto

frameworkVersion: '>=1.1.0 <2.0.0'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  timeout: 30
  environment:
    SOURCE_NAME: ${self:custom.sourceName}
    DATAWAREHOUSE_NAME: ${self:custom.dataWarehouseBucketName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource:
        - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - ${self:custom.sourceName}
              - '/*'
        - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - ${self:custom.dataWarehouseBucketName}
              - '/*'

package:
  exclude:
    - test

custom:
  sourceName: ${env:SOURCE_NAME, 'raw.challenge.data'}
  dataWarehouseBucketName: ${self:provider.stage}-datawarehouse
  tableRefresherName: ${self:provider.stage}-tableRefresherCrawler
  dataWarehouseDatabaseName: ${self:provider.stage}-students-datamart
  tableRefresherRoleName: ${self:provider.stage}-tableRefresherCrawlerRole-${self:provider.region}

functions:
  extractTransform:
    handler: src/handler.extractTransform
    events:
      - sns: ${self:provider.stage}-triggerEtl

resources:
  Resources:
    DataWarehouse:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.dataWarehouseBucketName}
    TableRefresher:
      Type: AWS::Glue::Crawler
      Properties:
        Name: ${self:custom.tableRefresherName}
        Targets:
          S3Targets:
            - Path: s3://${self:custom.dataWarehouseBucketName}/
        DatabaseName: ${self:custom.dataWarehouseDatabaseName}
        Role: !GetAtt TableRefresherRole.Arn
      DependsOn:
        - DataWarehouseDatabase
        - TableRefresherRole
    DataWarehouseDatabase:
      Type: AWS::Glue::Database
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseInput:
          Name: ${self:custom.dataWarehouseDatabaseName}
    TableRefresherRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - glue.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: ${self:custom.tableRefresherRoleName}
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                  Resource:
                    - Fn::Join:
                        - ''
                        - - 'arn:aws:s3:::'
                          - ${self:custom.dataWarehouseBucketName}
                          - '/*'
        RoleName: ${self:custom.tableRefresherRoleName}
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
